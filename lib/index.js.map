{"version":3,"sources":["index.js"],"names":["cx","FloatingActionButton","args","state","open","onMouseEnter","bind","onMouseLeave","setState","props","children","position","offset","variants","states","size","onLeft","indexOf","onTop","x","y","style","count","toArray","filter","child","map","index","title","itemStyle","Object","keys","reduce","nextStyle","key","dir","distance","transform","zIndex","opacity","getPartClassName","className","addVariants","addStates","build","propTypes","oneOf","shape","string","isRequired","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @file Melon Floating Button\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {PureComponent, cloneElement, Children} from 'react';\nimport PropTypes from 'prop-types';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('FloatingActionButton');\n\nexport default class FloatingActionButton extends PureComponent {\n\n    constructor(...args) {\n\n        super(...args);\n\n        this.state = {\n            open: false\n        };\n\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n\n    }\n\n    onMouseEnter() {\n        this.setState({open: true});\n    }\n\n    onMouseLeave() {\n        this.setState({open: false});\n    }\n\n    render() {\n\n        let {\n            children,\n            position,\n            offset,\n            variants,\n            states,\n            size\n        } = this.props;\n\n        let onLeft = position.indexOf('l') >= 0;\n        let onTop = position.indexOf('t') >= 0;\n        let {x, y} = offset;\n\n        let style = {\n            [onLeft ? 'left' : 'right']: x,\n            [onTop ? 'top' : 'bottom']: y\n        };\n\n        let count = Children.count(children);\n        let open = this.state.open;\n\n        children = Children\n            .toArray(children)\n            .filter(child => !!child)\n            .map((child, index) => {\n\n                let {\n                    title = '',\n                    variants = []\n                } = child.props;\n\n                child = cloneElement(child, {\n                    size: child.props.size || size,\n                    variants: [\n                        ...variants,\n                        'icon', 'floating'\n                    ],\n                    title: null\n                });\n\n                let itemStyle = Object.keys(style).reduce((nextStyle, key) => {\n\n                    let dir = position.indexOf('t') > -1 ? 1 : -1;\n                    let distance = open ? dir * index * 3 : 0;\n\n                    nextStyle.transform = index > 0\n                        ? `translateY(${distance}em)`\n                        : `rotate(${open ? 360 : 0}deg)`;\n\n                    nextStyle[key] = '0';\n\n                    return nextStyle;\n\n                }, {\n                    zIndex: count - index,\n                    opacity: open || index === 0 ? 1 : 0\n                });\n\n                return (\n                    <li\n                        data-title={index > 0 ? title : null}\n                        key={index}\n                        className={cx.getPartClassName('item')}\n                        style={itemStyle}>\n                        {child}\n                    </li>\n                );\n\n            });\n\n        let className = cx(this.props)\n            .addVariants(variants, position)\n            .addStates(states, {open})\n            .build();\n\n        return (\n            <ul\n                className={className}\n                style={style}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}>\n                {children}\n            </ul>\n        );\n\n    }\n\n}\n\nFloatingActionButton.propTypes = {\n    position: PropTypes.oneOf([\n        'tl',\n        'tr',\n        'bl',\n        'br'\n    ]),\n    offset: PropTypes.shape({\n        x: PropTypes.string.isRequired,\n        y: PropTypes.string.isRequired\n    }).isRequired\n};\n\nFloatingActionButton.defaultProps = {\n    position: 'br',\n    offset: {\n        x: '2rem',\n        y: '2rem'\n    }\n};\n"]}